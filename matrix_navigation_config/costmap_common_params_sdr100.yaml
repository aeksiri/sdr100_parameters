robot_base_frame: $(arg prefix)base_footprint
transform_tolerance: 1.0
# update_frequency: 5.0
# publish_frequency: 5.0
# obstacle_range: 5.0
#mark_threshold: 1
# footprint_model:
#   type:  "circular" 
#   radius: 0.23

# footprint_model:
#   type:  "polygon" 
#   vertices: [[-0.23, -0.23], [-0.23, 0.23], [0.23, 0.23], [0.23, -0.23]] 

# footprint: [[-0.23, -0.23], [-0.23, 0.23], [0.23, 0.23], [0.23, -0.23]] 

# footprint: []     



publish_voxel_map: true
navigation_map:
  map_topic: /map
  
obstacle_layer:
 enabled: true
 obstacle_range: 3.0
 raytrace_range: 3.0
 inflation_radius: 0.2
 track_unknown_space: true 
 combination_method: 1  (arg prefix)

 observation_sources: laser_scan_sensor
 laser_scan_sensor: {data_type: LaserScan, topic: /scan, marking: true, clearing: true}


ist_costmap_prohibition_layer:
  enabled: true
  fill_polygons: false
  dynamic_polygons: true
  prohibition_areas:
    # and last but not least a polygon with an individual number of points
    - []
    # - [[4.45,9.03],
    #    [4.14,0.0],
    #    [-4.05,-0.3],
    #    [-3.3, 10.4]]

# inflation_layer:
#   enabled:              true
#   inflation_radius:     0.6
#   cost_scaling_factor:  10.0

static_layer:
  enabled:              true
  map_topic:            "/map"

rgbd_obstacle_layer:
  enabled:                  true
  voxel_decay:              2.5 #3.0  #use 10 seconds if linear, e^n if exponential
  decay_model:              0     # 0=linear, 1=exponential, -1=persistent
  voxel_size:               0.05  # meters
  track_unknown_space:      true  # default space is known
  max_obstacle_height:      1.2   # meters
  unknown_threshold:        15    # voxel height
  mark_threshold:           3.5     # voxel height
  update_footprint_enabled: true
  combination_method:       1     # 1=max, 0=override
  origin_z:                 0.00   # meters
  publish_voxel_map:        false # default off
  transform_tolerance:      0.2   # seconds
  mapping_mode:             false # default off, saves map not for navigation
  map_save_duration:        60.0  # default 60s, how often to autosave
  # observation_sources:      rgbd1_mark rgbd1_clear rgbd2_mark rgbd2_clear
  observation_sources:      rgbd1_mark rgbd1_clear 
  # observation_sources:      rgbd1_mark rgbd1_clear 
  rgbd1_mark:
    data_type: PointCloud2
    topic: /depth_cam_mount_point/depth/color/points
    marking: true
    clearing: false
    obstacle_range: 3.0          # meters
    min_obstacle_height: 0.07     # default 0, meters
    max_obstacle_height: 1.2  # default 3, meters
    expected_update_rate: 0.0    # default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          # default false, for laser scans
    filter: "passthrough"        # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on 
    voxel_min_points: 0          # default 0, minimum points per voxel for voxel filter
    clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
  rgbd1_clear:
    data_type: PointCloud2
    topic: /depth_cam_mount_point/depth/color/points
    marking: false
    clearing: true
    max_z: 7.0                  # default 0, meters
    min_z: 0.1                  # default 10, meters
    vertical_fov_angle: 0.8745  # default 0.7, radians
    horizontal_fov_angle: 1.048 # default 1.04, radians
    decay_acceleration: 10.0    # default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar

# sonar_layer:
#   ns: "/matrix_io"
#   # topics: ["middle_front", "left", "left_front", "right", "right_front"]
#   topics: ["ultrasonic_1", "ultrasonic_2", "ultrasonic_3", "ultrasonic_4", "ultrasonic_5", "ultrasonic_6", "ultrasonic_7", "ultrasonic_8"]
#   # topics: ["middle_front", "left", "left_front", "right_front"]
#   no_readings_timeout: 0.0
#   clear_threshold: 0.25
#   mark_threshold: 0.8
#   clear_on_max_reading: true

laser_layer_temp:
  enabled:               true
  voxel_decay:           1 #0.25     #seconds if linear, e^n if exponential
  decay_model:           0      #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.05   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   2.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        3.0    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     true   # default off
  transform_tolerance:   0.2    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  observation_sources:    rgbd1_mark 
  rgbd1_mark:
    data_type: LaserScan
    topic: /scan
    marking: true
    clearing: false
    #min_obstacle_height: 0.3     #default 0, meters
    #max_obstacle_height: 2.0     #defaule 3, meters
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          #default false, for laser scans
    clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
    voxel_filter: true           #default off, apply voxel filter to sensor, recommend on
    voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter


